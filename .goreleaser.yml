before:
  hooks:
    - go mod tidy

builds:
- env:
    - CGO_ENABLED=0
  ldflags:
    - -s -w -X main.buildVersion={{.Version}} -X main.buildCommit={{.ShortCommit}} -X main.buildDate={{.Date}}
  goos:
    - linux
    - darwin
    - windows
  goarch:
    - 386
    - amd64
    - arm
    - arm64
  goarm: [6,7]
  ignore:
    - goos: darwin
      goarch: 386
    - goos: darwin
      goarch: arm

snapshot:
  # Allows you to change the name of the generated snapshot
  # Default is `SNAPSHOT-{{.ShortCommit}}`.
  name_template: '{{ .Version }}+{{.ShortCommit}}'

archives:
- name_template: "{{ .ProjectName }}_v{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
  replacements:
    386: i386
    amd64: x86_64
  format_overrides:
    - goos: windows
      format: zip
  files:
      - LICENSE*
      - README*
      - CHANGELOG*
      - pkg/services/*
      - pkg/config.example.yml

checksum:
  name_template: '{{ .ProjectName }}_v{{ .Version }}_checksums.txt'
  algorithm: sha256

changelog:
  skip: true
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
    - '^blds:'

release:
  # If set to true, will not auto-publish the release.
  draft: false

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  prerelease: auto

  # You can change the name of the GitHub release.
  name_template: "{{.Tag}}"


brews:
  -
    # Github repository to push the tap to.
    tap:
      owner: gesquive
      name: homebrew-tap

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: release-bot
      email: gesquive@gmail.com

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    # Caveats for the user of your binary.
    # Default is empty.
    caveats: ""

    # Your app's homepage.
    # Default is empty.
    homepage: "https://github.com/gesquive/paperless-uploader"

    # Your app's description.
    # Default is empty.
    description: "Watches a directory for files and uploads them to paperless-ng"

    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    skip_upload: auto

    # Packages your package depends on.
    dependencies: []

    # Packages that conflict with your package.
    conflicts: []

    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    # Default is empty.
    custom_block: |
      service do
        run [opt_bin/"paperless-uploader", "--config", etc/"paperless/config.yml"]
        working_dir var
        log_path var/"log/paperless-uploader.log"
        error_log_path var/"log/paperless-uploader.log"
      end

    # Custom install script for brew.
    # Default is 'bin.install "program"'.
    install: |
      bin.install "paperless-uploader"

    # Custom post_install script for brew.
    # Could be used to do any additional work after the "install" script
    # Default is empty.
    post_install: |
      (var/"paperless-watch").mkpath
      (etc/"paperless").mkpath
      if !File.exist?(etc/"paperless/config.yml")
        (etc/"paperless/config.yml").write <<~EOS
          log_file: stdout
          paperless:
            url: https://paperless.mydomain.com
            token: insert_paperless_token_here
          watch:
            path: /usr/local/var/paperless-watch
            interval: 10s
        EOS
      end

